package com.java.employ;

import static org.junit.Assert.*;

import java.text.SimpleDateFormat;
import java.util.Date;

import org.junit.Test;




public class VendorTest {
	private Date vendorStartedDate;
	
	@Test
	public void testGettersAndSetters() {
		Vendor vendor = new Vendor();
		vendor.setVendorId(100);
		vendor.setVendorName("smruti");
		vendor.setVendorCity("BBSR");
		vendor.setVendorEmail("smruti123@gmail.com");
		vendor.setVendorMobile("2987654377");
		vendor.setVendorStatus("Applied");
		vendor.setVendorStartedDate("2023-09-22");
		
		assertEquals(1, vendor.getVendorId());
		assertEquals("Satya", vendor.getVendorName());
		assertEquals("BBSR", vendor.getVendorCity());
		assertEquals("Satya", vendor.getVendorName());
		assertEquals("smruti123@gmail.com", vendor.getVendorEmail());
		assertEquals("983726548", vendor.getVendorMobile());
		assertEquals("APPLIED", vendor.getVendorStatus());
		
	}

	
	@Test
	public void testHashCode() {
		Vendor vendor1 = new Vendor();
		Vendor vendor2 = new Vendor();
		assertEquals(vendor1.hashCode(), vendor2.hashCode());
		
	}
	
	
	/*@Test
	public void testConstructors() throws ParseExceptions{
		Vendor vendor = new Vendor(100,"vendorName");
		assertNotNull(vendor);
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		 Date vendorStartedDate =sdf.parse("2023-09-22");
		 Date appliedOn = sdf.parse("2023-09-21");
		 Date actualDate = sdf.parse("2023-09-22");
		 Date actualDate2 = sdf.parse("2023-09-25");	
    	 Vendor detail = new Vendor(100, "smruti", "BBSR", "smruti123@gmail.com", "98765322345",
    			 VendorStatus.APPLIED, vendorStartedDate, 4.5, vendorReview);
    	 assertEquals(100, vendor.getVendorId());
		 assertEquals("smruti",vendor.getVendorName());
		 assertEquals(VendorStatus.APPLIED, vendor.getVendorStatus());
		 assertEquals(vendorStartedDate, actualDate);
	
		 assertEquals(4.5, vendor.getVendorRating());
		 assertEquals("Nice", vendor.getVendorReview());
		 
	}
	*/

	@Test
	public void testToString() {
		
		Vendor vendor = new Vendor();
		String result =vendor.toString();
		assertNotNull(result,"toString() should return a no-null string");
	
	}
	

}
